<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Histoire de l’informatique et introduction aux langages de programmation on Accueil</title>
    <link>https://dlatreyte.github.io/premieres-nsi/chap-01/</link>
    <description>Recent content in Histoire de l’informatique et introduction aux langages de programmation on Accueil</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>fr</language>
    <managingEditor>david.latreyte@louismassignon.com (David Latreyte)</managingEditor>
    <webMaster>david.latreyte@louismassignon.com (David Latreyte)</webMaster>
    <lastBuildDate>Fri, 09 Jul 2021 18:14:18 +0200</lastBuildDate><atom:link href="https://dlatreyte.github.io/premieres-nsi/chap-01/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Contrôle du flot d’exécution d’un programme, les structures itératives</title>
      <link>https://dlatreyte.github.io/premieres-nsi/chap-01/1%C3%A8re-sp%C3%A9-nsi/chap.-6-les-boucles/chap-06/</link>
      <pubDate>Sat, 28 Sep 2019 17:41:06 +0400</pubDate>
      <author>david.latreyte@louismassignon.com (David Latreyte)</author>
      <guid>https://dlatreyte.github.io/premieres-nsi/chap-01/1%C3%A8re-sp%C3%A9-nsi/chap.-6-les-boucles/chap-06/</guid>
      <description>Ce chapitre reprend l&amp;rsquo;étude de structures de contrôles, c&amp;rsquo;est à dire d&amp;rsquo;instructions qui permettent de modifier le « flot d&amp;rsquo;exécution implicite » d&amp;rsquo;un programme.
Après les structures conditionnelles (ou alternatives), les structures itératives (ou boucles) sont introduites.
Structures itératives Les boucles sont des instructions répétitives. Comme les tests conditionnels, elles nécessitent la définition de blocs d’instructions. Les instructions de ces blocs sont répétées tant qu&amp;rsquo;une condition d’arrêt n&amp;rsquo;est pas vérifiée. Chaque passage dans la boucle s&amp;rsquo;appelle une itération.</description>
    </item>
    
    <item>
      <title>Éléments d&#39;histoire et d&#39;architecture des ordinateurs</title>
      <link>https://dlatreyte.github.io/premieres-nsi/chap-01/chap-01/</link>
      <pubDate>Tue, 10 Sep 2019 23:50:18 +0400</pubDate>
      <author>david.latreyte@louismassignon.com (David Latreyte)</author>
      <guid>https://dlatreyte.github.io/premieres-nsi/chap-01/chap-01/</guid>
      <description>Au programme Histoire de l’informatique Contenus Capacités attendues Commentaires Événements clés de l’histoire de l’informatique Situer dans le temps les principaux événements de l’histoire de l’informatique et leurs protagonistes. Ces repères historiques seront construits au fur et à mesure de la présentation des concepts et techniques. Langages et programmation Contenus Capacités attendues Commentaires Diversité et unité des langages de programmation Repérer, dans un nouveau langage de programmation, les traits communs et les traits particuliers à ce langage.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://dlatreyte.github.io/premieres-nsi/chap-01/1%C3%A8re-sp%C3%A9-nsi/site-statique/chap-02/chap-02/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <author>david.latreyte@louismassignon.com (David Latreyte)</author>
      <guid>https://dlatreyte.github.io/premieres-nsi/chap-01/1%C3%A8re-sp%C3%A9-nsi/site-statique/chap-02/chap-02/</guid>
      <description>Chap. 02 — Premiers pas en programmation&amp;hellip; et en Python [TOC]
On appelle informatique le traitement automatisé des informations par un ordinateur. Cette discipline s&amp;rsquo;appuie sur la programmation, activité qui consiste à apprendre à un ordinateur à effectuer des tâches qu&amp;rsquo;il n&amp;rsquo;est pas capable d&amp;rsquo;exécuter à sa conception. L&amp;rsquo;écriture d&amp;rsquo;un programme nécessite l&amp;rsquo;utilisation d&amp;rsquo;un langage de programmation. Dans ce cours nous utiliserons Python.
À quoi a-t-on accès lorsqu&amp;rsquo;on utilise un langage de programmation ?</description>
    </item>
    
  </channel>
</rss>
