<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Contrôle du flot d’exécution d’un programme, les structures conditionnelles on Accueil</title>
    <link>https://dlatreyte.github.io/premieres-nsi/chap-04/</link>
    <description>Recent content in Contrôle du flot d’exécution d’un programme, les structures conditionnelles on Accueil</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>fr</language>
    <managingEditor>david.latreyte@louismassignon.com (David Latreyte)</managingEditor>
    <webMaster>david.latreyte@louismassignon.com (David Latreyte)</webMaster>
    <lastBuildDate>Fri, 27 Aug 2021 16:30:31 +0400</lastBuildDate><atom:link href="https://dlatreyte.github.io/premieres-nsi/chap-04/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Contrôle du flot d&#39;exécution d&#39;un programme : structures iteratives</title>
      <link>https://dlatreyte.github.io/premieres-nsi/chap-04/2-structures-iteratives/</link>
      <pubDate>Sun, 29 Aug 2021 00:17:52 +0400</pubDate>
      <author>david.latreyte@louismassignon.com (David Latreyte)</author>
      <guid>https://dlatreyte.github.io/premieres-nsi/chap-04/2-structures-iteratives/</guid>
      <description>Ce chapitre reprend l&amp;rsquo;étude de structures de contrôles, c&amp;rsquo;est à dire d&amp;rsquo;instructions qui permettent de modifier le « flot d&amp;rsquo;exécution implicite » d&amp;rsquo;un programme.
Après les structures conditionnelles (ou alternatives), les structures itératives (ou boucles) sont introduites.
Introduction Les boucles sont des instructions répétitives. Comme les tests conditionnels, elles nécessitent la définition de blocs d’instructions. Les instructions de ces blocs sont répétées tant qu&amp;rsquo;une condition d’arrêt n&amp;rsquo;est pas vérifiée. Chaque passage dans la boucle s&amp;rsquo;appelle une itération.</description>
    </item>
    
    <item>
      <title>Contrôle du flot d&#39;exécution d&#39;un programme : l&#39;alternative</title>
      <link>https://dlatreyte.github.io/premieres-nsi/chap-04/1-alternative/</link>
      <pubDate>Fri, 27 Aug 2021 16:34:09 +0400</pubDate>
      <author>david.latreyte@louismassignon.com (David Latreyte)</author>
      <guid>https://dlatreyte.github.io/premieres-nsi/chap-04/1-alternative/</guid>
      <description>Booléens et expressions booléennes Une grandeur booléenne est une grandeur qui ne peut prendre que deux valeurs : Vrai ou Faux, ou 0 ou 1, ou …). Dans le langage Python, les valeurs booléennes s&amp;rsquo;écrivent True et False. La fonction bool transforme n&amp;rsquo;importe quel argument en valeur booléenne — tout argument à valeur nulle (entier 0, flottant 0.0, chaîne de caractères &amp;quot;&amp;quot;, liste vide list(), etc.) est converti en valeur False, toute autre valeur pour l&amp;rsquo;argument devient la valeur True.</description>
    </item>
    
  </channel>
</rss>
