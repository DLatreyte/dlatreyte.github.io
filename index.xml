<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Accueil</title>
    <link>https://dlatreyte.github.io/</link>
    <description>Recent content on Accueil</description>
    <generator>Hugo -- gohugo.io</generator>
    <managingEditor>david.latreyte@louismassignon.com (David Latreyte)</managingEditor>
    <webMaster>david.latreyte@louismassignon.com (David Latreyte)</webMaster>
    <lastBuildDate>Sat, 22 Aug 2020 11:09:39 +0400</lastBuildDate>
    
	<atom:link href="https://dlatreyte.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Comment obtenir une numérotation automatique des sections, de la table des matières avec Hugo</title>
      <link>https://dlatreyte.github.io/hugo_notes/numerotation-automatique-sections/</link>
      <pubDate>Sat, 22 Aug 2020 11:09:39 +0400</pubDate>
      <author>david.latreyte@louismassignon.com (David Latreyte)</author>
      <guid>https://dlatreyte.github.io/hugo_notes/numerotation-automatique-sections/</guid>
      <description>Étapes à suivre La méthode introduite dans ce document s&amp;rsquo;appuie sur les propriétés des CSS.
Trois étapes :
 Modification du fichier default.md afin d&amp;rsquo;y ajouter la variable booléenne auto_numbering ; Ajout de l&amp;rsquo;appel à une nouvelle classe, auto_numbering, dans le modèle de page single.html ; Définition de la classe auto_numbering.  Mise en œuvre Modification de l&amp;rsquo;entête du fichier default.md  Ajouter la ligne suivante au fichier archetypes &amp;gt; default.</description>
    </item>
    
    <item>
      <title>Spécialité NSI, Bulletin officiel spécial n° 2 du 13 février 2020</title>
      <link>https://dlatreyte.github.io/terminales-nsi/modalites_examen_nsi/</link>
      <pubDate>Fri, 21 Aug 2020 23:02:16 +0400</pubDate>
      <author>david.latreyte@louismassignon.com (David Latreyte)</author>
      <guid>https://dlatreyte.github.io/terminales-nsi/modalites_examen_nsi/</guid>
      <description>Cette note de service définit l&amp;rsquo;épreuve terminale de l&amp;rsquo;enseignement de spécialité numérique et sciences informatiques de la classe de terminale de la voie générale. Elle est applicable à compter de la session 2021 du baccalauréat.
Objectifs L&amp;rsquo;épreuve porte sur les notions et contenus, capacités et compétences du programme de l&amp;rsquo;enseignement de spécialité numérique et sciences informatique de la classe de terminale (cf. arrêté du 17 juillet 2019 paru au BOEN spécial n° 8 du 25 juillet 2019).</description>
    </item>
    
    <item>
      <title>Les différentes erreurs lorsqu&#39;on calcule à l&#39;aide d&#39;un ordinateur</title>
      <link>https://dlatreyte.github.io/culture/calcul_numerique_et_erreurs/</link>
      <pubDate>Fri, 21 Aug 2020 14:08:45 +0400</pubDate>
      <author>david.latreyte@louismassignon.com (David Latreyte)</author>
      <guid>https://dlatreyte.github.io/culture/calcul_numerique_et_erreurs/</guid>
      <description>Dans ce document, on s&amp;rsquo;intéresse au différentes erreurs qui interviennent lorsqu&amp;rsquo;on effectue des calculs à l&amp;rsquo;aide d&amp;rsquo;un ordinateur. On prend pour exemple le calcul numérique de la dérivée d&amp;rsquo;une fonction, qu&amp;rsquo;elle soit définie analytiquement ou numériquement (par une table de valeurs).
Dérivation d&amp;rsquo;une fonction analytique &amp;mdash; idée simple Introduction Le nombre dérivé $f&amp;rsquo;(x)$ en un point $x \in \mathbb{R}$, d&amp;rsquo;une fonction1 : $$ \begin{array}{l|rcl} f: &amp;amp; \mathbb{R} &amp;amp; \longrightarrow &amp;amp; \mathbb{R} \cr &amp;amp; x &amp;amp; \longmapsto &amp;amp; f(x) \end{array} $$</description>
    </item>
    
    <item>
      <title>Grand oral</title>
      <link>https://dlatreyte.github.io/terminales-pc/grand_oral/</link>
      <pubDate>Wed, 19 Aug 2020 19:16:14 +0400</pubDate>
      <author>david.latreyte@louismassignon.com (David Latreyte)</author>
      <guid>https://dlatreyte.github.io/terminales-pc/grand_oral/</guid>
      <description>1. Définition et objectifs  Épreuve orale Durée : 20 minutes Préparation : 20 minutes Coefficient : 10  L&amp;rsquo;épreuve orale terminale est l&amp;rsquo;une des cinq épreuves terminales de l&amp;rsquo;examen du baccalauréat.
Elle est obligatoire pour tous les candidats qui présentent l&amp;rsquo;épreuve dans les mêmes conditions.
Les candidats à besoins éducatifs particuliers peuvent demander à bénéficier d&amp;rsquo;aménagements de l&amp;rsquo;épreuve conformément à l&amp;rsquo;annexe 2.
2. Finalité de l&amp;rsquo;épreuve L&amp;rsquo;épreuve permet au candidat de montrer sa capacité à prendre la parole en public de façon claire et convaincante.</description>
    </item>
    
    <item>
      <title>Parties du programme à l&#39;examen</title>
      <link>https://dlatreyte.github.io/terminales-pc/programme_avant_examen/</link>
      <pubDate>Wed, 19 Aug 2020 18:10:34 +0400</pubDate>
      <author>david.latreyte@louismassignon.com (David Latreyte)</author>
      <guid>https://dlatreyte.github.io/terminales-pc/programme_avant_examen/</guid>
      <description>1. Partie écrite Les notions suivantes sont exclues du programme de la partie écrite de l&amp;rsquo;épreuve :
Thème Constitution et transformations de la matière
    Notions exclues du programme de la partie écrite de l&amp;rsquo;épreuve     2. Modéliser l&amp;rsquo;évolution temporelle d&amp;rsquo;un système, siège d&amp;rsquo;une transformation A) Suivre et modéliser l&amp;rsquo;évolution temporelle d&amp;rsquo;un système siège d&amp;rsquo;une transformation chimique Modélisation microscopique Modélisation microscopique   2. Modéliser l&amp;rsquo;évolution temporelle d&amp;rsquo;un système, siège d&amp;rsquo;une transformation B) Modéliser l&amp;rsquo;évolution temporelle d&amp;rsquo;un système, siège d&amp;rsquo;une transformation nucléaire B) Modéliser l&amp;rsquo;évolution temporelle d&amp;rsquo;un système, siège d&amp;rsquo;une transformation nucléaire   3.</description>
    </item>
    
    <item>
      <title>Spécialité PC, Bulletin officiel spécial n° 2 du 13 février 2020</title>
      <link>https://dlatreyte.github.io/terminales-pc/modalites_examen_pc/</link>
      <pubDate>Wed, 19 Aug 2020 16:22:06 +0400</pubDate>
      <author>david.latreyte@louismassignon.com (David Latreyte)</author>
      <guid>https://dlatreyte.github.io/terminales-pc/modalites_examen_pc/</guid>
      <description>Cette note de service définit l&amp;rsquo;épreuve de l&amp;rsquo;enseignement de spécialité physique-chimie de la classe de terminale de la voie générale. Elle est applicable à compter de la session 2021 du baccalauréat.
L&amp;rsquo;épreuve de cette spécialité est constituée d&amp;rsquo;une partie écrite d&amp;rsquo;une durée de 3 heures 30 minutes et d&amp;rsquo;une partie pratique d&amp;rsquo;une durée de 1 heure. Chaque partie est notée sur 20 points. La note finale sur 20 points de l&amp;rsquo;épreuve de spécialité physique-chimie est obtenue en multipliant par 0,8 la note sur 20 points de la partie écrite et par 0,2 la note sur 20 points de la partie pratique et en additionnant ces deux résultats.</description>
    </item>
    
    <item>
      <title>Chap Huit</title>
      <link>https://dlatreyte.github.io/premieres-nsi/chap-huit/chap-huit/</link>
      <pubDate>Fri, 25 Oct 2019 10:54:09 +0400</pubDate>
      <author>david.latreyte@louismassignon.com (David Latreyte)</author>
      <guid>https://dlatreyte.github.io/premieres-nsi/chap-huit/chap-huit/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Quelques dessins simples avec une tortue</title>
      <link>https://dlatreyte.github.io/premieres-nsi/chap-sept/chap-7/</link>
      <pubDate>Sat, 12 Oct 2019 18:10:22 +0400</pubDate>
      <author>david.latreyte@louismassignon.com (David Latreyte)</author>
      <guid>https://dlatreyte.github.io/premieres-nsi/chap-sept/chap-7/</guid>
      <description>1. Présentation de la « tortue graphique » La « tortue graphique » a été inventée à la fin des années 60 par Seymour Papert et ses collègues du MIT (célèbre université américaine) pour permettre de rendre l&amp;rsquo;apprentissage de la programmation plus ludique. Elle faisait alors partie du langage Logo, spécifiquement développé pour être utilisé par de jeunes enfants.
Le nom « tortue graphique » suggère la façon dont les figures géométriques vont être dessinées à l&amp;rsquo;écran.</description>
    </item>
    
    <item>
      <title>Contrôle du flot d’exécution d’un programme, les structures itératives</title>
      <link>https://dlatreyte.github.io/premieres-nsi/chap-six/chap-06/</link>
      <pubDate>Sat, 28 Sep 2019 17:41:06 +0400</pubDate>
      <author>david.latreyte@louismassignon.com (David Latreyte)</author>
      <guid>https://dlatreyte.github.io/premieres-nsi/chap-six/chap-06/</guid>
      <description>Ce chapitre reprend l&amp;rsquo;étude de structures de contrôles, c&amp;rsquo;est à dire d&amp;rsquo;instructions qui permettent de modifier le « flot d&amp;rsquo;exécution implicite » d&amp;rsquo;un programme.
Après les structures conditionnelles (ou alternatives), les structures itératives (ou boucles) sont introduites.
Structures itératives Les boucles sont des instructions répétitives. Comme les tests conditionnels, elles nécessitent la définition de blocs d’instructions. Les instructions de ces blocs sont répétées tant qu&amp;rsquo;une condition d’arrêt n&amp;rsquo;est pas vérifiée. Chaque passage dans la boucle s&amp;rsquo;appelle une itération.</description>
    </item>
    
    <item>
      <title>Tester automatiquement ses fonctions avec doctest</title>
      <link>https://dlatreyte.github.io/premieres-nsi/chap-cinq/chap-05/</link>
      <pubDate>Sat, 28 Sep 2019 17:40:56 +0400</pubDate>
      <author>david.latreyte@louismassignon.com (David Latreyte)</author>
      <guid>https://dlatreyte.github.io/premieres-nsi/chap-cinq/chap-05/</guid>
      <description>1. Rappel Au cours du chapitre 2, nous avons expliqué pourquoi la définition d&amp;rsquo;une fonction doit toujours être accompagnée de l&amp;rsquo;écriture de sa spécification. Cette dernière permet :
 à tout utilisateur de la fonction de déterminer facilement  quel traitement celle-ci réalise ; comment il faut l&amp;rsquo;utiliser (nombre d&amp;rsquo;arguments par exemple) ; quelles conditions il est nécessaire de respecter pour l&amp;rsquo;utiliser.   au programmeur de cette fonction de préciser  le nombre et le type de ses paramètres ; le type de la valeur retournée ; le traitement exécuté, accompagné de quelques exemples.</description>
    </item>
    
    <item>
      <title>Contrôle du flot d’exécution d’un programme, les structures conditionnelles</title>
      <link>https://dlatreyte.github.io/premieres-nsi/chap-quatre/chap-04/</link>
      <pubDate>Sat, 28 Sep 2019 17:40:46 +0400</pubDate>
      <author>david.latreyte@louismassignon.com (David Latreyte)</author>
      <guid>https://dlatreyte.github.io/premieres-nsi/chap-quatre/chap-04/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Variables, affectations</title>
      <link>https://dlatreyte.github.io/premieres-nsi/chap-trois/chap-03/</link>
      <pubDate>Sat, 28 Sep 2019 11:28:37 +0400</pubDate>
      <author>david.latreyte@louismassignon.com (David Latreyte)</author>
      <guid>https://dlatreyte.github.io/premieres-nsi/chap-trois/chap-03/</guid>
      <description>1. Variables Une variable est une zone de la mémoire repérée par un identificateur. Cet identificateur permet de modifier ou de faire appel au contenu de cette zone de la mémoire* lors du déroulement du programme.  Remarque. Le langage Python est sensible à la casse : ma_variable, maVariable et mavariable sont donc trois identificateurs différents (préférer la première écriture).
Conventions.
  Le premier caractère de l&amp;rsquo;identificateur doit être une lettre ou un blanc souligné (_).</description>
    </item>
    
    <item>
      <title>Premiers pas en programmation... et en Python</title>
      <link>https://dlatreyte.github.io/premieres-nsi/chap-deux/chap-2-1/</link>
      <pubDate>Sat, 14 Sep 2019 21:37:45 +0400</pubDate>
      <author>david.latreyte@louismassignon.com (David Latreyte)</author>
      <guid>https://dlatreyte.github.io/premieres-nsi/chap-deux/chap-2-1/</guid>
      <description>On appelle informatique le traitement automatisé des informations par un ordinateur. Cette discipline s&amp;rsquo;appuie sur la programmation, activité qui consiste à apprendre à un ordinateur à effectuer des tâches qu&amp;rsquo;il n&amp;rsquo;est pas capable d&amp;rsquo;exécuter à sa conception. L&amp;rsquo;écriture d&amp;rsquo;un programme nécessite l&amp;rsquo;utilisation d&amp;rsquo;un langage de programmation. Dans ce cours nous utiliserons Python.
1. À quoi a-t-on accès lorsqu&amp;rsquo;on utilise un langage de programmation ?## Un langage de programmation doit :</description>
    </item>
    
    <item>
      <title>Chap. 2,1 - Quelques caractéristiques des ondes mécaniques progressives</title>
      <link>https://dlatreyte.github.io/terminales-pc/chap-deux/chap21/</link>
      <pubDate>Sat, 14 Sep 2019 18:28:55 +0400</pubDate>
      <author>david.latreyte@louismassignon.com (David Latreyte)</author>
      <guid>https://dlatreyte.github.io/terminales-pc/chap-deux/chap21/</guid>
      <description>À l&amp;rsquo;issue de cette séance de travaux pratiques vous devriez être capables d&amp;rsquo;expliquer ce qu&amp;rsquo;est une onde mécanique et de citer quelques unes des caractéristiques des ondes mécaniques.
 A] Qu&amp;rsquo;est-ce qu&amp;rsquo;une onde mécanique ? Expérience 1 : Utilisation d&amp;rsquo;une corde Disposer sur le sol une corde tenue à l&amp;rsquo;une de ses extrémités. Avec la main, imprimer rapidement à l&amp;rsquo;extrémité libre de cette corde un bref mouvement vers le haut puis vers le bas.</description>
    </item>
    
    <item>
      <title>Bienvenue</title>
      <link>https://dlatreyte.github.io/about/infos/</link>
      <pubDate>Sat, 14 Sep 2019 11:54:26 +0400</pubDate>
      <author>david.latreyte@louismassignon.com (David Latreyte)</author>
      <guid>https://dlatreyte.github.io/about/infos/</guid>
      <description>Que vas-tu trouver ici ? Si tu es l&amp;rsquo;un de mes élèves au lycée français Louis Massignon à Abu Dhabi, tu trouveras sur ce site l&amp;rsquo;intégralité des documents que nous aurons travaillés en cours, agrémentées de quelques articles dans lesquels j&amp;rsquo;essaierai de te faire découvrir des notions pas toujours au programme qui développeront ta curiosité, je l&amp;rsquo;espère.
Bonne navigation !</description>
    </item>
    
    <item>
      <title>Éléments d&#39;histoire et d&#39;architecture des ordinateurs</title>
      <link>https://dlatreyte.github.io/premieres-nsi/chap-01/chap-01/</link>
      <pubDate>Tue, 10 Sep 2019 23:50:18 +0400</pubDate>
      <author>david.latreyte@louismassignon.com (David Latreyte)</author>
      <guid>https://dlatreyte.github.io/premieres-nsi/chap-01/chap-01/</guid>
      <description>  Accès au diaporama   </description>
    </item>
    
  </channel>
</rss>