<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Programmation dynamique on Accueil</title>
    <link>https://dlatreyte.github.io/terminales-nsi/chap-14/</link>
    <description>Recent content in Programmation dynamique on Accueil</description>
    <generator>Hugo -- gohugo.io</generator>
    <managingEditor>david.latreyte@louismassignon.com (David Latreyte)</managingEditor>
    <webMaster>david.latreyte@louismassignon.com (David Latreyte)</webMaster>
    <lastBuildDate>Thu, 25 Feb 2021 04:48:58 +0400</lastBuildDate><atom:link href="https://dlatreyte.github.io/terminales-nsi/chap-14/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Découpe d&#39;une corde</title>
      <link>https://dlatreyte.github.io/terminales-nsi/chap-14/3-decoupe-corde/</link>
      <pubDate>Tue, 09 Mar 2021 10:20:05 +0400</pubDate>
      <author>david.latreyte@louismassignon.com (David Latreyte)</author>
      <guid>https://dlatreyte.github.io/terminales-nsi/chap-14/3-decoupe-corde/</guid>
      <description> Énoncé au format pdf Corrigé au format pdf </description>
    </item>
    
    <item>
      <title>Problème du rendu de monnaie</title>
      <link>https://dlatreyte.github.io/terminales-nsi/chap-14/2-rendu-monnaie/</link>
      <pubDate>Sun, 28 Feb 2021 05:28:54 +0400</pubDate>
      <author>david.latreyte@louismassignon.com (David Latreyte)</author>
      <guid>https://dlatreyte.github.io/terminales-nsi/chap-14/2-rendu-monnaie/</guid>
      <description>Énoncé du problème Un commerçant cherche à rendre la monnaie à ses clients de façon optimale, c&amp;rsquo;est-à-dire avec le nombre minimal de pièces et de billets.
Dans ce problème,
On suppose que les clients ne donnent que des sommes entières en euros (pas de centimes pour simplifier) ; Les valeurs des pièces et billets à disposition sont : 1, 2, 5, 10, 20, 50, 100, 200 et 500. On suppose que l&amp;rsquo;on a autant d&amp;rsquo;exemplaires que nécessaire de chaque pièce et billet ; Dans la suite, afin de simplifier, on désigne par « pièces » à la fois les pièces et les billets.</description>
    </item>
    
    <item>
      <title>Autour de la suite de Fibonacci</title>
      <link>https://dlatreyte.github.io/terminales-nsi/chap-14/1-suite-fibonacci/</link>
      <pubDate>Thu, 25 Feb 2021 04:49:20 +0400</pubDate>
      <author>david.latreyte@louismassignon.com (David Latreyte)</author>
      <guid>https://dlatreyte.github.io/terminales-nsi/chap-14/1-suite-fibonacci/</guid>
      <description>Rappel : récursivité terminale La définition de la fonction factorielle est $$ n! = \begin{cases} 0 &amp;amp; \text{if } n = 0 \cr n \times (n-1)! &amp;amp; \text{sinon} \end{cases} $$
Définir la fonction fact_env qui calcule la factorielle d&amp;rsquo;un entier naturel $n$, sans oublier le jeu de tests.
La spécification de la fonction est :
1 2 3 4 5 6 def fact_env(n: int) -&amp;gt; int: &amp;#34;&amp;#34;&amp;#34; Retourne la factorielle de n.</description>
    </item>
    
  </channel>
</rss>
