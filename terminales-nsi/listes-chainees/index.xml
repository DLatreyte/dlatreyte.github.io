<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Listes chaînées on Accueil</title>
    <link>https://dlatreyte.github.io/terminales-nsi/listes-chainees/</link>
    <description>Recent content in Listes chaînées on Accueil</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>fr</language>
    <managingEditor>david.latreyte@louismassignon.com (David Latreyte)</managingEditor>
    <webMaster>david.latreyte@louismassignon.com (David Latreyte)</webMaster>
    <lastBuildDate>Tue, 13 Oct 2020 04:15:41 +0400</lastBuildDate>
    <atom:link href="https://dlatreyte.github.io/terminales-nsi/listes-chainees/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Réalisation d&#39;une classe Liste Chainee</title>
      <link>https://dlatreyte.github.io/terminales-nsi/listes-chainees/3-classe-liste-chainee/</link>
      <pubDate>Mon, 20 Nov 2023 15:50:34 +0400</pubDate><author>david.latreyte@louismassignon.com (David Latreyte)</author>
      <guid>https://dlatreyte.github.io/terminales-nsi/listes-chainees/3-classe-liste-chainee/</guid>
      <description>Par transformation des fonctions du document 1 dans ce chapitre en méthodes, écrire le code de la classe Liste qui définit le type abstrait « Liste chaînée ».
Réponse 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 from __future__ import annotations class Maillon: &amp;#34;&amp;#34;&amp;#34; Un maillon de la liste.</description>
    </item>
    <item>
      <title>Implémentation du type abstrait Liste Chaînée à l&#39;aide de listes Python</title>
      <link>https://dlatreyte.github.io/terminales-nsi/listes-chainees/2-listes-chainees-liste/</link>
      <pubDate>Mon, 20 Nov 2023 15:50:09 +0400</pubDate><author>david.latreyte@louismassignon.com (David Latreyte)</author>
      <guid>https://dlatreyte.github.io/terminales-nsi/listes-chainees/2-listes-chainees-liste/</guid>
      <description>Reprendre toutes les fonctions des sections 2 et 3 du document 1 de ce chapitre, en implémentant cette fois le type abstrait « Liste chaînée » à l&amp;rsquo;aide de tuples (à la place de la classe).
Réponse 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 def est_dans(tab: list[int], val: int) -&amp;gt; bool: &amp;#34;&amp;#34;&amp;#34; Recherche la présence de val dans tab.</description>
    </item>
    <item>
      <title>Listes Chaînées, présentation</title>
      <link>https://dlatreyte.github.io/terminales-nsi/listes-chainees/1-listes-chainees/</link>
      <pubDate>Wed, 14 Oct 2020 18:01:18 +0400</pubDate><author>david.latreyte@louismassignon.com (David Latreyte)</author>
      <guid>https://dlatreyte.github.io/terminales-nsi/listes-chainees/1-listes-chainees/</guid>
      <description>Tableaux Un tableau est une structure de données dans laquelle les éléments, tous de même type, occupent des positions contiguës en mémoire. Le nombre d&amp;rsquo;éléments qu&amp;rsquo;un tableau peut contenir est déterminé à la création d&amp;rsquo;un tableau. Type Python Type Opération Exemple Complexité N&amp;rsquo;existe pas Tableau Accès à un élément tab[i] $O(1)$ Modification d&amp;rsquo;un élément tab[i] = x $O(1)$ Effacement d&amp;rsquo;un élément retire(tab, i) $O(n)$ Insertion d&amp;rsquo;un élément insere(tab, x, i) $O(n)$ Recherche d&amp;rsquo;un élément est_dans(tab, x) $O(n)$ La structure de données appelée « liste » dans le langage Python est implémentée à l&amp;rsquo;aide de tableaux dynamiques.</description>
    </item>
  </channel>
</rss>
