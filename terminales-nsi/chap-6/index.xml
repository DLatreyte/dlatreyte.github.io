<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Structures de données fournies avec le langage Python on Accueil</title>
    <link>https://dlatreyte.github.io/terminales-nsi/chap-6/</link>
    <description>Recent content in Structures de données fournies avec le langage Python on Accueil</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>fr</language>
    <managingEditor>david.latreyte@louismassignon.com (David Latreyte)</managingEditor>
    <webMaster>david.latreyte@louismassignon.com (David Latreyte)</webMaster>
    <lastBuildDate>Mon, 12 Oct 2020 21:18:41 +0400</lastBuildDate>
    <atom:link href="https://dlatreyte.github.io/terminales-nsi/chap-6/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Structures de données fournies avec le langage Python</title>
      <link>https://dlatreyte.github.io/terminales-nsi/chap-6/1-structures-integrees/</link>
      <pubDate>Tue, 13 Oct 2020 05:25:49 +0400</pubDate><author>david.latreyte@louismassignon.com (David Latreyte)</author>
      <guid>https://dlatreyte.github.io/terminales-nsi/chap-6/1-structures-integrees/</guid>
      <description>Python possède dans la bibliothèque standard un grand nombre de structures de données, programmées de manière efficace.
Rappels : modules, fonctions Pour chaque module, on distingue :
sa réalisation (ou implémentation) : c&amp;rsquo;est le code lui-même.
son interface (API) : c&amp;rsquo;est l&amp;rsquo;énumération des fonctions définies dans le module qui sont utilisées depuis d&amp;rsquo;autres modules/programmes, les clients.
L&amp;rsquo;interface doit présenter une documentation dans laquelle tout ce que doit savoir le client doit être indiqué.</description>
    </item>
    <item>
      <title>Itérer sur les éléments d&#39;un dictionnaire</title>
      <link>https://dlatreyte.github.io/terminales-nsi/chap-6/2-exercices/</link>
      <pubDate>Tue, 13 Oct 2020 05:08:27 +0400</pubDate><author>david.latreyte@louismassignon.com (David Latreyte)</author>
      <guid>https://dlatreyte.github.io/terminales-nsi/chap-6/2-exercices/</guid>
      <description>Au zoo de Beauval, il y a 5 éléphants d&amp;rsquo;Asie, 17 écureuils d&amp;rsquo;Asie, 2 pandas d&amp;rsquo;Asie, etc. On représente cet inventaire à l&amp;rsquo;aide d&amp;rsquo;un dictionnaire, de façon suivante :
1 2 3 4 5 6 7 zoo_Beauval={ &amp;#39;éléphant&amp;#39;: (&amp;#39;Asie&amp;#39;, 5), &amp;#39;écureuil&amp;#39;: (&amp;#39;Asie&amp;#39;, 17), &amp;#39;panda&amp;#39;: (&amp;#39;Asie&amp;#39;, 2), &amp;#39;hippopotame&amp;#39;: (&amp;#39;Afrique&amp;#39;, 7), &amp;#39;girafe&amp;#39;: (&amp;#39;Afrique&amp;#39;, 4) } On représente de la même façon le zoo de La Flèche :
1 2 3 4 5 6 zoo_LaFleche = { &amp;#39;ours&amp;#39;: (&amp;#39;Europe&amp;#39;, 4), &amp;#39;tigre&amp;#39;: (&amp;#39;Asie&amp;#39;, 7), &amp;#39;girafe&amp;#39;: (&amp;#39;Afrique&amp;#39;, 11), &amp;#39;hippopotame&amp;#39;: (&amp;#39;Afrique&amp;#39;, 3) } On souhaite se doter d&amp;rsquo;une fonction plus_grand_nombre() qui prend un zoo en paramètre et qui renvoie le nom de l&amp;rsquo;animal le plus représenté dans ce zoo.</description>
    </item>
  </channel>
</rss>
