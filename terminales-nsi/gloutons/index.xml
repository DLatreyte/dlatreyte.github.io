<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Algorithmes gloutons on Accueil</title>
    <link>https://dlatreyte.github.io/terminales-nsi/gloutons/</link>
    <description>Recent content in Algorithmes gloutons on Accueil</description>
    <generator>Hugo</generator>
    <language>fr</language>
    <lastBuildDate>Sun, 24 Jan 2021 01:51:49 +0400</lastBuildDate>
    <atom:link href="https://dlatreyte.github.io/terminales-nsi/gloutons/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Le rendu de monnaie</title>
      <link>https://dlatreyte.github.io/terminales-nsi/gloutons/1-rendu-monnaie/</link>
      <pubDate>Sun, 24 Jan 2021 01:51:49 +0400</pubDate>
      <guid>https://dlatreyte.github.io/terminales-nsi/gloutons/1-rendu-monnaie/</guid>
      <description>&lt;p&gt;Un client achète un objet qui coûte 53 euros. Il paye avec un billet de 200 euros. Il faut donc lui rendre 147 euros, par exemple un billet de 100, deux billets de 20, un billet de 5 et une pièce de 2.&lt;/p&gt;&#xA;&lt;p&gt;Pour minimiser le nombre de pièces (on confond dans ce document les pièces et les billets) à rendre, on peut choisir la stratégie suivante :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;On commence par rendre la pièce de plus grande valeur possible ;&lt;/li&gt;&#xA;&lt;li&gt;On déduit cette valeur de la somme (encore) à rendre ;&lt;/li&gt;&#xA;&lt;li&gt;On recommence, jusqu’à obtenir une somme nulle.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;En procédant ainsi, on se rend compte que l&amp;rsquo;&lt;strong&gt;on résout le problème étape par étape et qu’un choix optimal est fait à chaque étape&lt;/strong&gt; (la pièce de plus grande valeur). Cette stratégie entre donc bien dans la catégorie des &lt;strong&gt;algorithmes gloutons&lt;/strong&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Le problème du sac à dos</title>
      <link>https://dlatreyte.github.io/terminales-nsi/gloutons/2-sac-a-dos/</link>
      <pubDate>Thu, 21 Jan 2021 06:41:30 +0400</pubDate>
      <guid>https://dlatreyte.github.io/terminales-nsi/gloutons/2-sac-a-dos/</guid>
      <description>&lt;div class=&#34;note warning&#34;&gt;&#xA;  &lt;a href=&#34;https://interstices.info/le-probleme-du-sac-a-dos/&#34;&gt;À lire absolument pour en découvrir plus !&lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;img src=&#34;../../terminales-nsi/chap-9/chap-9-5/chap-9-5-1.png&#34; alt=&#34;&#34; width=&#34;45%&#34; style=&#34;float: right; padding-left: 10px;&#34; /&gt;&#xA;Dans ce document, on s&#39;intéresse à une classe de problèmes d&#39;optimisation connus sous le nom général de « problème du sac à dos ». On peut définir ce problème de la manière suivante : *« durant un cambriolage un voleur possède un sac dont la capacité (en poids par exemple) est limitée. Il se trouve face à un ensemble d&#39;objets qu&#39;il veut dérober. Chacun de ces objets est caractérisé par sa valeur et son poids. Le voleur souhaite optimiser la valeur totale des objets qu&#39;il dérobe tout en ne dépassant pas le poids maximal supporté par son sac ».*&#xA;&lt;p&gt;Ce problème est une abstraction pour un grand nombre d&amp;rsquo;autres problèmes d&amp;rsquo;optimisation. Il a été utilisé en cryptographie comme base pour différents schémas de chiffrement1. Il faut cependant noter que la plupart de ces schémas de chiffrement ne sont plus actuellement considérés comme sûrs. ^1, il est utilisé lors du chargement des bateaux ou d&amp;rsquo;avions, lors de la découpe de matériaux (minimisation des coupes « chutes » lors de la découpe), etc.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
