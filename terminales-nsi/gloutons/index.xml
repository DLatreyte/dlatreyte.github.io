<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Algorithmes gloutons on Accueil</title>
    <link>https://dlatreyte.github.io/terminales-nsi/gloutons/</link>
    <description>Recent content in Algorithmes gloutons on Accueil</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>fr</language>
    <managingEditor>david.latreyte@louismassignon.com (David Latreyte)</managingEditor>
    <webMaster>david.latreyte@louismassignon.com (David Latreyte)</webMaster>
    <lastBuildDate>Sun, 24 Jan 2021 01:51:49 +0400</lastBuildDate>
    <atom:link href="https://dlatreyte.github.io/terminales-nsi/gloutons/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Le rendu de monnaie</title>
      <link>https://dlatreyte.github.io/terminales-nsi/gloutons/1-rendu-monnaie/</link>
      <pubDate>Sun, 24 Jan 2021 01:51:49 +0400</pubDate><author>david.latreyte@louismassignon.com (David Latreyte)</author>
      <guid>https://dlatreyte.github.io/terminales-nsi/gloutons/1-rendu-monnaie/</guid>
      <description>Un client achète un objet qui coûte 53 euros. Il paye avec un billet de 200 euros. Il faut donc lui rendre 147 euros, par exemple un billet de 100, deux billets de 20, un billet de 5 et une pièce de 2.&#xA;Pour minimiser le nombre de pièces (on confond dans ce document les pièces et les billets) à rendre, on peut choisir la stratégie suivante :&#xA;On commence par rendre la pièce de plus grande valeur possible ; On déduit cette valeur de la somme (encore) à rendre ; On recommence, jusqu’à obtenir une somme nulle.</description>
    </item>
    <item>
      <title>Le problème du sac à dos</title>
      <link>https://dlatreyte.github.io/terminales-nsi/gloutons/2-sac-a-dos/</link>
      <pubDate>Thu, 21 Jan 2021 06:41:30 +0400</pubDate><author>david.latreyte@louismassignon.com (David Latreyte)</author>
      <guid>https://dlatreyte.github.io/terminales-nsi/gloutons/2-sac-a-dos/</guid>
      <description>À lire absolument pour en découvrir plus ! Introduction Dans ce document, on s&#39;intéresse à une classe de problèmes d&#39;optimisation connus sous le nom général de « problème du sac à dos ». On peut définir ce problème de la manière suivante : *« durant un cambriolage un voleur possède un sac dont la capacité (en poids par exemple) est limitée. Il se trouve face à un ensemble d&#39;objets qu&#39;il veut dérober.</description>
    </item>
  </channel>
</rss>
