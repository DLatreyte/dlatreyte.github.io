<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dictionnaire on Accueil</title>
    <link>https://dlatreyte.github.io/tags/dictionnaire/</link>
    <description>Recent content in Dictionnaire on Accueil</description>
    <generator>Hugo -- gohugo.io</generator>
    <managingEditor>david.latreyte@louismassignon.com (David Latreyte)</managingEditor>
    <webMaster>david.latreyte@louismassignon.com (David Latreyte)</webMaster>
    <lastBuildDate>Tue, 13 Oct 2020 05:25:49 +0400</lastBuildDate><atom:link href="https://dlatreyte.github.io/tags/dictionnaire/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Structures de données fournies avec le langage Python</title>
      <link>https://dlatreyte.github.io/terminales-nsi/chap-6/1-structures-integrees/</link>
      <pubDate>Tue, 13 Oct 2020 05:25:49 +0400</pubDate>
      <author>david.latreyte@louismassignon.com (David Latreyte)</author>
      <guid>https://dlatreyte.github.io/terminales-nsi/chap-6/1-structures-integrees/</guid>
      <description>Python possède dans la bibliothèque standard un grand nombre de structures de données, programmées de manière efficace.
Pourquoi différentes structures de données ? Les structures de données organisent différemment les données que le programme traite. Le langage Python fournissant le type list, on pourrait se demander pourquoi ne pas systématiquement l&amp;rsquo;utiliser et pourquoi devoir apprendre de nouveaux types.
En fait, la spécialisation des structures de données rend la programmation plus simple (utilisation de l&#39;API) et plus efficace (complexité).</description>
    </item>
    
    <item>
      <title>Exercices</title>
      <link>https://dlatreyte.github.io/terminales-nsi/chap-6/2-exercices/</link>
      <pubDate>Tue, 13 Oct 2020 05:08:27 +0400</pubDate>
      <author>david.latreyte@louismassignon.com (David Latreyte)</author>
      <guid>https://dlatreyte.github.io/terminales-nsi/chap-6/2-exercices/</guid>
      <description>Itérer sur les éléments d&amp;rsquo;un dictionnaire Au zoo de Beauval, il y a 5 éléphants d&amp;rsquo;Asie, 17 écureuils d&amp;rsquo;Asie, 2 pandas d&amp;rsquo;Asie, etc. On représente cet inventaire à l&amp;rsquo;aide d&amp;rsquo;un dictionnaire, de façon suivante :
zoo_Beauval={ &amp;#39;éléphant&amp;#39;: (&amp;#39;Asie&amp;#39;, 5), &amp;#39;écureuil&amp;#39;: (&amp;#39;Asie&amp;#39;, 17), &amp;#39;panda&amp;#39;: (&amp;#39;Asie&amp;#39;, 2), &amp;#39;hippopotame&amp;#39;: (&amp;#39;Afrique&amp;#39;, 7), &amp;#39;girafe&amp;#39;: (&amp;#39;Afrique&amp;#39;, 4) } On représente de la même façon le zoo de La Flèche :
zoo_LaFleche = { &amp;#39;ours&amp;#39;: (&amp;#39;Europe&amp;#39;, 4), &amp;#39;tigre&amp;#39;: (&amp;#39;Asie&amp;#39;, 7), &amp;#39;girafe&amp;#39;: (&amp;#39;Afrique&amp;#39;, 11), &amp;#39;hippopotame&amp;#39;: (&amp;#39;Afrique&amp;#39;, 3) } On souhaite se doter d&amp;rsquo;une fonction plus_grand_nombre() qui prend un zoo en paramètre et qui renvoie le nom de l&amp;rsquo;animal le plus représenté dans ce zoo.</description>
    </item>
    
    <item>
      <title>Modéliser les notes des élèves</title>
      <link>https://dlatreyte.github.io/terminales-nsi/chap-6/3-annale/</link>
      <pubDate>Tue, 13 Oct 2020 05:06:51 +0400</pubDate>
      <author>david.latreyte@louismassignon.com (David Latreyte)</author>
      <guid>https://dlatreyte.github.io/terminales-nsi/chap-6/3-annale/</guid>
      <description>Partie 1 : Modélisation simpliste On modélise les notes d&amp;rsquo;une élève de la faon suivante :
notes_de_lea = [12, 14, 3, 16, 17, 2, 13, 19]  Quel est le type de notes_de_lea ?  un int une liste un tuple un dictionnaire autre chose   Que vaut l&amp;rsquo;expression notes_de_lea[2] ?  3 14 6 5 autre chose   Quelle instruction permet d&amp;rsquo;ajouter une note de 15 à cette structure de données ?</description>
    </item>
    
  </channel>
</rss>
