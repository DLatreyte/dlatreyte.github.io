<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Encapsulation on Accueil</title>
    <link>https://dlatreyte.github.io/tags/encapsulation/</link>
    <description>Recent content in Encapsulation on Accueil</description>
    <generator>Hugo</generator>
    <language>fr</language>
    <lastBuildDate>Wed, 13 Jan 2021 19:12:34 +0400</lastBuildDate>
    <atom:link href="https://dlatreyte.github.io/tags/encapsulation/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Exercices de programmation objet</title>
      <link>https://dlatreyte.github.io/terminales-nsi/programmation-objet/6-exercices/</link>
      <pubDate>Wed, 13 Jan 2021 19:12:34 +0400</pubDate>
      <guid>https://dlatreyte.github.io/terminales-nsi/programmation-objet/6-exercices/</guid>
      <description>&lt;div class=&#34;note warning&#34;&gt;&#xA;  Chaque méthode définie devra être accompagnée de sa spécification.&#xA;&lt;/div&gt;&#xA;&lt;h2 id=&#34;manipulation-de-points&#34;&gt;Manipulation de points&lt;/h2&gt;&#xA;&lt;p&gt;On considère la classe nommée &lt;code&gt;Point&lt;/code&gt; ayant les attributs suivants :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;__abs&lt;/code&gt; : attribut privé de type &lt;code&gt;float&lt;/code&gt; pour représenter l&amp;rsquo;abscisse du point ;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;__ord&lt;/code&gt; : attribut privé de type &lt;code&gt;float&lt;/code&gt; pour représenter l&amp;rsquo;ordonnée du point.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Définir la class &lt;code&gt;Point&lt;/code&gt; et le constructeur &lt;code&gt;__init__&lt;/code&gt; permettant d&amp;rsquo;initialiser les deux attributs.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;note normal&#34;&gt;&#xA;  &lt;p&gt;L&amp;rsquo;&lt;strong&gt;encapsulation&lt;/strong&gt; est un concept fondamental de la conception objet. L&amp;rsquo;idée est de &lt;em&gt;ne pas laisser accessibles les attributs depuis l&amp;rsquo;extérieur de la classe/objet&lt;/em&gt; ; les attributs sont alors dits &lt;strong&gt;privés&lt;/strong&gt; (ou &lt;strong&gt;protégés&lt;/strong&gt; si l&amp;rsquo;accès est nécessaire dans une sous-classe).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Jeu de la vie</title>
      <link>https://dlatreyte.github.io/terminales-nsi/programmation-objet/5-jeu-vie/</link>
      <pubDate>Sun, 04 Oct 2020 04:35:40 +0400</pubDate>
      <guid>https://dlatreyte.github.io/terminales-nsi/programmation-objet/5-jeu-vie/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;Le but de ce sujet est de réaliser en Python une implémentation du jeu de la vie en utilisant la programmation objet.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;div class=&#34;note normal&#34;&gt;&#xA;  Un &lt;strong&gt;automate cellulaire&lt;/strong&gt; consiste en une grille régulière de « cellules » contenant chacune un « état » choisi parmi un ensemble fini et qui peut évoluer au cours du temps. L&amp;rsquo;état d&amp;rsquo;une cellule au temps $t+1$ est fonction de l&amp;rsquo;état au temps $t$&#xA;d&amp;rsquo;un nombre fini de cellules appelé son « voisinage ». À chaque nouvelle unité de temps, les mêmes règles sont appliquées simultanément à toutes les cellules de la grille, produisant une nouvelle « génération » de cellules dépendant entièrement de la génération précédente.&#xA;&lt;/div&gt;&#xA;&lt;p&gt;Le &lt;strong&gt;jeu de la vie&lt;/strong&gt; a été inventé par le mathématicien britannique John H. Conway (1937-2020). C’est un exemple de ce qu’on appelle un automate cellulaire bidimensionnel. Il se déroule sur un tableau rectangulaire $(L \times H)$ de cellules. Une cellule est représentée par ses coordonnées $x$ et $y$ qui vérifient $0 \leqslant x &amp;lt; L$ et $0 \leqslant y &amp;lt; H$.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Résoudre un problème grâce aux paradigmes objet et fonctionnel</title>
      <link>https://dlatreyte.github.io/terminales-nsi/programmation-objet/4-fonction/</link>
      <pubDate>Thu, 01 Oct 2020 04:21:17 +0400</pubDate>
      <guid>https://dlatreyte.github.io/terminales-nsi/programmation-objet/4-fonction/</guid>
      <description>&lt;p&gt;L&amp;rsquo;objectif de ce document est d&amp;rsquo;illustrer une fois encore l&amp;rsquo;intérêt des différents paradigmes de programmation.&lt;/p&gt;&#xA;&lt;h2 id=&#34;cas-détudenbsp-fonction-avec-paramètres&#34;&gt;Cas d&amp;rsquo;étude : fonction avec paramètres&lt;/h2&gt;&#xA;&lt;p&gt;On considère l&amp;rsquo;équation qui traduit le mouvement d&amp;rsquo;une balle lancée verticalement vers le haut avec une vitesse $\vec{v}_0$ depuis l&amp;rsquo;origine des altitudes telle que l&amp;rsquo;écrit un physicien : $$y(t) = -\dfrac{1}{2}g\, t^2 + v_0\, t$$&#xA;Ce physicien a donc tendance à considérer que $y$ est une fonction de la variable $t$ et que cette fonction dépend des paramètres $v_0$ et $g$.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Méthodes spéciales en Python</title>
      <link>https://dlatreyte.github.io/terminales-nsi/programmation-objet/3-exercices/</link>
      <pubDate>Tue, 29 Sep 2020 09:51:52 +0400</pubDate>
      <guid>https://dlatreyte.github.io/terminales-nsi/programmation-objet/3-exercices/</guid>
      <description>&lt;p&gt;Définit une classe nommée &lt;code&gt;Fraction&lt;/code&gt; pour représenter les nombres rationnels. Cette classe doit posséder deux attributs &lt;code&gt;num&lt;/code&gt; et &lt;code&gt;denom&lt;/code&gt;, de type entier, qui représentent respectivement le numérateur et le dénominateur du nombre rationnel.&lt;br&gt;&#xA;On demande que le dénominateur soit un entier positif.&lt;/p&gt;&#xA;&lt;p&gt;Un corrigé de cette activité se trouve à cette adresse : &#xA;&lt;a class=&#34;remote&#34; href=&#34;https://repl.it/@dlatreyte/fraction&#34; target=&#34;_blank&#34;&gt;https://repl.it/@dlatreyte/fraction&lt;/a&gt;&#xA;&#xA;&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Écrire le constructeur de cette classe. Une exception de type &lt;code&gt;ValueError&lt;/code&gt; doit être levée si le dénominateur n&amp;rsquo;est pas un nombre entier positif.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Simulation du fonctionnement d&#39;une banque</title>
      <link>https://dlatreyte.github.io/terminales-nsi/programmation-objet/2-banque/</link>
      <pubDate>Sat, 26 Sep 2020 20:06:58 +0400</pubDate>
      <guid>https://dlatreyte.github.io/terminales-nsi/programmation-objet/2-banque/</guid>
      <description>&lt;p&gt;L&amp;rsquo;objectif de ce document est de simuler (sommairement bien sûr) le fonctionnement d&amp;rsquo;une banque. Le programme doit permettre :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;La création d&amp;rsquo;une banque ;&lt;/li&gt;&#xA;&lt;li&gt;La création de comptes bancaires ;&lt;/li&gt;&#xA;&lt;li&gt;La création de personnes propriétaires de ces comptes bancaires.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Une correction se trouve à cette adresse : &#xA;&lt;a class=&#34;remote&#34; href=&#34;https://repl.it/@dlatreyte/banque&#34; target=&#34;_blank&#34;&gt;https://repl.it/@dlatreyte/banque&lt;/a&gt;&#xA;&#xA;&lt;/p&gt;&#xA;&lt;h2 id=&#34;classe-personne&#34;&gt;Classe Personne&lt;/h2&gt;&#xA;&lt;p&gt;Dans un module nommé &lt;code&gt;personne&lt;/code&gt;, créer la classe &lt;code&gt;Personne&lt;/code&gt; dont la spécification est la suivante :&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Personne&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;    Modélisation d&amp;#39;une personne.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;    Attributs&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;    ---------&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;    - nom : str&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;        Renseigné à la création de l&amp;#39;objet&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;    - Prenom : str&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;        Renseigné à la création de l&amp;#39;objet&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;    - email : str&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;        Email. Initialisé à &amp;#34;&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;    - telephone : str&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;        Numéro de téléphone. Initialisé à &amp;#34;&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;    - date_naissance : str&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;        Chaîne de caractères au format jour/mois/année (4 chiffres). Initialisé à &amp;#34;&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;    - jour_naissance : int&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;        Déterminé à partir de la date de naissance. Initialisée à -1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;    - mois_naissance : int&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;        Déterminé à partir de la date de naissance. Initialisée à -1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;    - annee_naissance : int&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;        Déterminé à partir de la date de naissance. Initialisée à -1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;    &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;Les spécifications des méthodes sont les suivantes :&lt;/p&gt;</description>
    </item>
    <item>
      <title>Programmation Objet</title>
      <link>https://dlatreyte.github.io/terminales-nsi/programmation-objet/1-programmation-objet/</link>
      <pubDate>Wed, 23 Sep 2020 21:07:12 +0400</pubDate>
      <guid>https://dlatreyte.github.io/terminales-nsi/programmation-objet/1-programmation-objet/</guid>
      <description>&lt;h2 id=&#34;programmation-orientée-objet&#34;&gt;Programmation orientée objet&lt;/h2&gt;&#xA;&lt;div class=&#34;note tip&#34;&gt;&#xA;  &lt;em&gt;Un objet est une instance d&amp;rsquo;une classe.&lt;/em&gt;&#xA;&lt;/div&gt;&#xA;&lt;p&gt;L&amp;rsquo;un des objectifs principaux de la notion d&amp;rsquo;objet est d&amp;rsquo;organiser des programmes complexes grâce aux notions :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;d&amp;rsquo;&lt;strong&gt;encapsulation&lt;/strong&gt; ;&lt;/li&gt;&#xA;&lt;li&gt;d&amp;rsquo;&lt;strong&gt;abstraction&lt;/strong&gt; ;&lt;/li&gt;&#xA;&lt;li&gt;d&amp;rsquo;&lt;strong&gt;héritage&lt;/strong&gt; ;&lt;/li&gt;&#xA;&lt;li&gt;de &lt;strong&gt;polymorphisme&lt;/strong&gt; ;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;strong&gt;Remarque :&lt;/strong&gt; Seules les deux premières notions apparaissent dans le programme de NSI.&lt;/p&gt;&#xA;&lt;div class=&#34;note tip&#34;&gt;&#xA;  &lt;h4 id=&#34;encapsulation&#34;&gt;Encapsulation&lt;/h4&gt;&#xA;&lt;p&gt;Le principe de l&amp;rsquo;encapsulation est de &lt;em&gt;regrouper dans le même objet, les données (attributs) et les traitements (méthodes)&lt;/em&gt; qui lui sont spécifiques. Ainsi un objet est défini par ses attributs et ses méthodes.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
