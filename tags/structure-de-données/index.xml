<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Structure De Données on Accueil</title>
    <link>https://dlatreyte.github.io/tags/structure-de-donn%C3%A9es/</link>
    <description>Recent content in Structure De Données on Accueil</description>
    <generator>Hugo</generator>
    <language>fr</language>
    <lastBuildDate>Sun, 14 Apr 2024 18:42:53 +0400</lastBuildDate>
    <atom:link href="https://dlatreyte.github.io/tags/structure-de-donn%C3%A9es/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Coloration d&#39;un graphe</title>
      <link>https://dlatreyte.github.io/terminales-nsi/graphes/5-coloration-graphe/</link>
      <pubDate>Sun, 14 Apr 2024 18:42:53 +0400</pubDate>
      <guid>https://dlatreyte.github.io/terminales-nsi/graphes/5-coloration-graphe/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;L&amp;rsquo;objectif de cette séance est de découvrir comment colorier chaque sommet&#xA;d&amp;rsquo;un graphe à l&amp;rsquo;aide d&amp;rsquo;un algorithme glouton.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;div class=&#34;note normal&#34;&gt;&#xA;  &lt;p&gt;Colorier un graphe signifie associer une couleur à chacun de ses sommets&#xA;de façon à ce que deux sommets liés par une arête n&amp;rsquo;aient pas la même couleur&#xA;(deux sommets non adjacents peuvent avoir la même couleur).&lt;/p&gt;&#xA;&lt;p&gt;Colorier un graphe avec un &lt;strong&gt;nombre minimal de couleurs&lt;/strong&gt; est un problème&#xA;difficile mais l&amp;rsquo;utilisation d&amp;rsquo;un algorithme glouton permet de résoudre&#xA;le problème, au prix d&amp;rsquo;un nombre de couleurs qui n&amp;rsquo;est pas toujours minimal.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Représentation d&#39;un graphe en informatique</title>
      <link>https://dlatreyte.github.io/terminales-nsi/graphes/2-representation-graphe-bis/</link>
      <pubDate>Tue, 19 Mar 2024 19:48:53 +0400</pubDate>
      <guid>https://dlatreyte.github.io/terminales-nsi/graphes/2-representation-graphe-bis/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;Plusieurs modes de représentation peuvent être implémentés pour stocker des graphes : &lt;em&gt;matrices d’adjacence (ou sommet-sommet), listes des voisins, des successeurs ou des prédécesseurs&lt;/em&gt;. Lors de cette séance nous allons écrire les classes réalisant ces implémentations.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;h4 id=&#34;structure-de-graphe-basée-sur-une-liste-dadjacence&#34;&gt;Structure de graphe basée sur une liste d&amp;rsquo;adjacence&lt;/h4&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Écrire le code de la méthode &lt;code&gt;__init__&lt;/code&gt; de la classe &lt;code&gt;Sommet&lt;/code&gt; dont la spécification est :&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;fm&#34;&gt;__init__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Sommet&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;    Initialisation d&amp;#39;un sommet.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;    &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Remarque&lt;/strong&gt; : La classe &lt;code&gt;Sommet&lt;/code&gt; possède deux attributs :&lt;/p&gt;</description>
    </item>
    <item>
      <title>Parcours en profondeur : écriture du code en Python</title>
      <link>https://dlatreyte.github.io/terminales-nsi/graphes/4-parcours-profondeur-python/</link>
      <pubDate>Thu, 06 May 2021 06:46:05 +0400</pubDate>
      <guid>https://dlatreyte.github.io/terminales-nsi/graphes/4-parcours-profondeur-python/</guid>
      <description>&lt;h2 id=&#34;écriture-dune-classe-graphe&#34;&gt;Écriture d&amp;rsquo;une classe &lt;code&gt;Graphe&lt;/code&gt;&lt;/h2&gt;&#xA;&lt;p&gt;L&amp;rsquo;objectif de cette partie est l&amp;rsquo;écriture du code modélisant un graphe orienté. La représentation choisie est celle d&amp;rsquo;un dictionnaire de successeurs (&lt;a href=&#34;https://dlatreyte.github.io/terminales-nsi/graphes/1-graphes-structure-de-donnees/&#34;&gt;en cours&lt;/a&gt; et dans le &lt;a href=&#34;https://dlatreyte.github.io/terminales-nsi/graphes/2-representation-graphe/&#34;&gt;document 15,2&lt;/a&gt; on a étudié les représentations par des matrice et liste de successeurs).&lt;br&gt;&#xA;La représentation par un dictionnaire de successeurs présente de nombreux avantages. Par exemple,&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;les sommets peuvent être des entiers ou des chaînes de caractères quelconques ;&lt;/li&gt;&#xA;&lt;li&gt;La complexité de la liste des successeurs est directement proportionnelle au nombre de successeurs pour un sommet donné. L&amp;rsquo;occupation mémoire est donc faible si les sommets possèdent peu de successeurs.&lt;br&gt;&#xA;&lt;strong&gt;Remarque :&lt;/strong&gt; dans le cas d&amp;rsquo;une matrice d&amp;rsquo;adjacence, la taille est fixe et comporte $N^2$ éléments si le nombre de sommets est égal à $N$.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;remarque&#34;&gt;Remarque&lt;/h4&gt;&#xA;&lt;p&gt;Contrairement à ce qui a été fait dans le &lt;a href=&#34;https://dlatreyte.github.io/terminales-nsi/graphes/2-representation-graphe/&#34;&gt;document 15,2&lt;/a&gt;, la classe qui va être implémentée ici permettra d&amp;rsquo;initialiser un graphe vide, puis de le constituer progressivement.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Parcours de graphes</title>
      <link>https://dlatreyte.github.io/terminales-nsi/graphes/3-parcours-graphes/</link>
      <pubDate>Thu, 29 Apr 2021 09:18:21 +0400</pubDate>
      <guid>https://dlatreyte.github.io/terminales-nsi/graphes/3-parcours-graphes/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;a class=&#34;remote&#34; href=&#34;../../terminales-nsi/chap-15/chap-15-3/3-parcours-Q.pdf&#34; target=&#34;_blank&#34;&gt;Cours et exercices non corrigés&lt;/a&gt;&#xA;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr /&gt;&#xA;&lt;details style=&#34;background-color: #f2f2f2;&#34;&gt;&#xA;    &lt;summary&gt;&#xA;        &lt;strong&gt; Solutions&lt;/strong&gt;&#xA;    &lt;/summary&gt;&#xA;&lt;p&gt;&lt;a class=&#34;remote&#34; href=&#34;../../terminales-nsi/chap-15/chap-15-3/3-parcours-QR.pdf&#34; target=&#34;_blank&#34;&gt;Cours et exercices corrigés&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;hr /&gt;</description>
    </item>
    <item>
      <title>Représentation d&#39;un graphe en informatique</title>
      <link>https://dlatreyte.github.io/terminales-nsi/graphes/2-representation-graphe/</link>
      <pubDate>Thu, 22 Apr 2021 04:48:57 +0400</pubDate>
      <guid>https://dlatreyte.github.io/terminales-nsi/graphes/2-representation-graphe/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;Plusieurs modes de représentation peuvent être implémentés pour stocker des graphes : &lt;em&gt;matrices d’adjacence (ou sommet-sommet), listes des voisins, des successeurs ou des prédécesseurs&lt;/em&gt;. Lors de cette séance nous allons écrire les classes réalisant ces implémentations.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;matrice-sommet-sommet&#34;&gt;Matrice sommet-sommet&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Écrire le code de la classe &lt;code&gt;GrapheM&lt;/code&gt; qui implémente une matrice sommet-sommet.&lt;br&gt;&#xA;La spécification du constructeur de la classe est :&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;fm&#34;&gt;__init__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;GrapheM&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mat&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]])&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;        Constructeur de la classe.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;        &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Remarque :&lt;/strong&gt; cette classe possède l&amp;rsquo;attribut &lt;code&gt;mat&lt;/code&gt; qui référence la matrice d&amp;rsquo;adjacence.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Les graphes : structure de données</title>
      <link>https://dlatreyte.github.io/terminales-nsi/graphes/1-graphes-structure-de-donnees/</link>
      <pubDate>Tue, 20 Apr 2021 07:56:25 +0400</pubDate>
      <guid>https://dlatreyte.github.io/terminales-nsi/graphes/1-graphes-structure-de-donnees/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;a class=&#34;remote&#34; href=&#34;../../terminales-nsi/chap-15/chap-15-1/Introduction-graphes-Q.pdf&#34; target=&#34;_blank&#34;&gt;Cours et exercices non corrigés&lt;/a&gt;&#xA;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr /&gt;&#xA;&lt;details style=&#34;background-color: #f2f2f2;&#34;&gt;&#xA;    &lt;summary&gt;&#xA;        &lt;strong&gt; Solutions&lt;/strong&gt;&#xA;    &lt;/summary&gt;&#xA;&lt;p&gt;&lt;a class=&#34;remote&#34; href=&#34;../../terminales-nsi/chap-15/chap-15-1/Introduction-graphes-QR.pdf&#34; target=&#34;_blank&#34;&gt;Cours et exercices corrigés&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;hr /&gt;&#xA;&lt;!--&#xA;## Un peu d&#39;histoire : Les Ponts de Königsberg&#xA;&#xA;La ville de Königsberg (aujourd&#39;hui Kaliningrad en Russie) est construite autour de deux îles situées sur le Pregel et reliées entre elles par un pont. Six autres ponts relient les rives de la rivière à l&#39;une ou l&#39;autre des deux îles.&#xA;&#xA;&lt;img src=&#34;../../terminales-nsi/chap-15/chap-15-1/im1.png&#34; alt=&#34;&#34; width=&#34;50%&#34; /&gt;&#xA;&#xA;1. Existe-t-il une promenade dans les rues de Königsberg permettant, à partir d&#39;un point de départ au choix, de *passer une et une seule fois par chaque pont*, et de *revenir à son point de départ*, étant entendu qu&#39;on ne peut traverser le Pregel qu&#39;en passant sur les ponts ?&#xA;&#xA;&#xA;&lt;hr /&gt;&#xA;&lt;details style=&#34;background-color: #f2f2f2;&#34;&gt;&#xA;    &lt;summary&gt;&#xA;        &lt;strong&gt; Réponse&lt;/strong&gt;&#xA;    &lt;/summary&gt;&#xA;    &#xA;&#xA;Non. Si une telle promenade existait, chaque quartier devrait être relié à un nombre pair de ponts : un premier pour arriver dans le quartier, un second pour quitter le quartier.&#xA;&#xA;&#xA;&lt;/details&gt;&#xA;&lt;hr /&gt;&#xA;&#xA;&#xA;&#xA;2. Existe-t-il une promenade dans les rues de Königsberg permettant, à partir d&#39;un point de départ au choix, de *passer une et une seule fois par chaque pont* ?&#xA;&#xA;&#xA;&lt;hr /&gt;&#xA;&lt;details style=&#34;background-color: #f2f2f2;&#34;&gt;&#xA;    &lt;summary&gt;&#xA;        &lt;strong&gt; Réponse&lt;/strong&gt;&#xA;    &lt;/summary&gt;&#xA;    &#xA;&#xA;Non. Si une telle promenade existait, les quartiers, à l&#39;exception des quartiers de départ et d&#39;arrivée, devraient être reliés à un nombre pair de ponts : un premier pour arriver dans le quartier, un second pour quitter le quartier.&#xA;&#xA;&#xA;&lt;/details&gt;&#xA;&lt;hr /&gt;&#xA;&#xA;&#xA;&#xA;#### Comment Euler a-t-il résolu le problème en 1735 ?&#xA;&#xA;Il a représenté les quartiers par des nœuds et les ponts par des arêtes et cherché si un parcours passant par toutes les arêtes une et une seule fois existait.&#xA;&#xA;&lt;img src=&#34;../../terminales-nsi/chap-15/chap-15-1/im2.png&#34; alt=&#34;&#34; width=&#34;50%&#34; /&gt;&#xA;&#xA;## Graphes&#xA;&#xA;Un **graphe** est un objet abstrait composé d&#39;**éléments** — les *sommets* — qui modélisent des objets de la vie réelle et de **relations entre ces éléments** — les *arêtes* (graphes non orientés) ou les *arcs* (graphes orientés).&#xA;&#xA;Un graphe permet de représenter des liens d&#39;amitié entre des personnes, des lignes aériennes entre des villes, des câbles entre des ordinateurs et des routeurs, des références entre des pages web, etc. Ce concept est utilisé dans l&#39;industrie (informatique, recherche opérationnelle, etc) mais aussi dans la recherche (étude de réseaux sociaux, biologie, mathématiques, etc.)&#xA;&#xA;Un graphe peut être :&#xA;&#xA;- **orienté** ou **non orienté** ;&#xA;- **pondéré** ou **non pondéré**.&#xA;&#xA;----&#xA;&#xA;#### Exemples supplémentaires de graphes&#xA;&#xA;- **Graphe du flot de contrôle d&#39;un programme**  &#xA;Les sommets sont les instructions ou les tests, les flèches indiquent les enchaînements possibles entre ceux-ci.&#xA;&#xA;&lt;img src=&#34;../../terminales-nsi/chap-15/chap-15-1/im3.png&#34; alt=&#34;&#34; width=&#34;50%&#34; /&gt;&#xA;&#xA;3. Le graphe associé à ce flot de contrôle est-il orienté ou non orienté ?&#xA;&#xA;&lt;hr /&gt;&#xA;&lt;details style=&#34;background-color: #f2f2f2;&#34;&gt;&#xA;    &lt;summary&gt;&#xA;        &lt;strong&gt; Réponse&lt;/strong&gt;&#xA;    &lt;/summary&gt;&#xA;    &#xA;&#xA;Le graphe est orienté.&#xA;&#xA;&#xA;&lt;/details&gt;&#xA;&lt;hr /&gt;&#xA;&#xA;&#xA;&#xA;- **Organisation de tâches qui doivent être exécutées séquentiellement**  &#xA;Les sommets sont les tâches, des relations existent entre les tâches terminées et celles qui les suivent.&#xA;&lt;img src=&#34;../../terminales-nsi/chap-15/chap-15-1/im4.png&#34; alt=&#34;&#34; width=&#34;80%&#34; /&gt;&#xA;&#xA;&gt; Préparation d&#39;un curry d&#39;agneau.&#xA;&#xA;4. Pourquoi une structure de **file** ne peut-elle convenir ici ?&#xA;&#xA;&lt;hr /&gt;&#xA;&lt;details style=&#34;background-color: #f2f2f2;&#34;&gt;&#xA;    &lt;summary&gt;&#xA;        &lt;strong&gt; Réponse&lt;/strong&gt;&#xA;    &lt;/summary&gt;&#xA;    &#xA;&#xA;Certaines tâches doivent être réalisées en parallèle.&#xA;&#xA;&#xA;&lt;/details&gt;&#xA;&lt;hr /&gt;&#xA;&#xA;&#xA;&#xA;## Graphes non orientés&#xA;&#xA;### Définitions&#xA;&#xA;&lt;div class=&#34;note tip&#34;&gt;&#xA;  &lt;h4 id=&#34;graphe-non-orienté&#34;&gt;Graphe non orienté&lt;/h4&gt;&#xA;&lt;p&gt;Un graphe non orienté $G$ est défini par un couple $G = (V, E)$, où $V$ est un &lt;strong&gt;ensemble de sommets&lt;/strong&gt; et $E$ un &lt;strong&gt;ensemble d&amp;rsquo;arêtes&lt;/strong&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Les graphes</title>
      <link>https://dlatreyte.github.io/terminales-nsi/graphes/</link>
      <pubDate>Tue, 20 Apr 2021 04:18:36 +0400</pubDate>
      <guid>https://dlatreyte.github.io/terminales-nsi/graphes/</guid>
      <description>&lt;h2 id=&#34;au-programme-de-la-partie--structures-de-données-&#34;&gt;Au programme de la partie « Structures de données »&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;Contenus&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;Capacités attendues&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;Commentaires&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Graphes : structures relationnelles. Sommets, arcs, arêtes, graphes orientés ou non orientés.&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;- Modéliser des situations sous forme de graphes.&lt;br /&gt;- Écrire les implémentations correspondantes d’un graphe : matrice d’adjacence, liste de successeurs/de prédécesseurs.&lt;br /&gt;- Passer d’une représentation à une autre.&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;On s’appuie sur des exemples comme le réseau routier, le réseau électrique, internet, les réseaux sociaux.&lt;br /&gt;- Le choix de la représentation dépend du traitement qu’on veut mettre en place : on fait le lien avec la rubrique « algorithmique ».&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;au-programme-de-la-partie--algorithmique-&#34;&gt;Au programme de la partie « Algorithmique »&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;Contenus&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;Capacités attendues&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;Commentaires&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Algorithmes sur les graphes.&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;- Parcourir un graphe en profondeur d’abord, en largeur d’abord.&lt;br /&gt;- Repérer la présence d’un cycle dans un graphe.&lt;br /&gt;- Chercher un chemin dans un graphe.&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;- Le parcours d’un labyrinthe et le routage dans internet sont des exemples d’algorithme sur les graphes.&lt;br /&gt;- L’exemple des graphes permet d’illustrer l’utilisation des classes en programmation.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;documents&#34;&gt;Documents&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;Doc.&lt;/strong&gt; &lt;a href=&#34;1-graphes-structure-de-donnees&#34;&gt;&lt;em&gt;Les graphes : structure de données&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
