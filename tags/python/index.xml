<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on Accueil</title>
    <link>https://dlatreyte.github.io/tags/python/</link>
    <description>Recent content in Python on Accueil</description>
    <generator>Hugo</generator>
    <language>fr</language>
    <managingEditor>david.latreyte@louismassignon.com (David Latreyte)</managingEditor>
    <webMaster>david.latreyte@louismassignon.com (David Latreyte)</webMaster>
    <lastBuildDate>Mon, 20 Nov 2023 15:18:34 +0400</lastBuildDate>
    <atom:link href="https://dlatreyte.github.io/tags/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Algorithmes gloutons</title>
      <link>https://dlatreyte.github.io/terminales-nsi/gloutons/</link>
      <pubDate>Mon, 20 Nov 2023 15:18:34 +0400</pubDate><author>david.latreyte@louismassignon.com (David Latreyte)</author>
      <guid>https://dlatreyte.github.io/terminales-nsi/gloutons/</guid>
      <description>Au programme de la classe de première Contenus Capacités attendues Commentaires Algorithmes gloutons Résoudre un problème grâce à un algorithme glouton. Exemples : problèmes du sac à dos ou du rendu de monnaie. Les algorithmes gloutons constituent une méthode algorithmique parmi d’autres qui seront vues en terminale. Documents Doc. Le rendu de monnaie&#xA;Doc. Le problème du sac à dos</description>
    </item>
    <item>
      <title>Tester ses fonctions avec &#39;assert&#39;</title>
      <link>https://dlatreyte.github.io/premieres-nsi/chap-05/2-assert/</link>
      <pubDate>Sun, 29 Aug 2021 16:36:24 +0400</pubDate><author>david.latreyte@louismassignon.com (David Latreyte)</author>
      <guid>https://dlatreyte.github.io/premieres-nsi/chap-05/2-assert/</guid>
      <description>Dans le document 5,1, nous avons insisté sur l&amp;rsquo;importance de la spécification d&amp;rsquo;une fonction et sur celle d&amp;rsquo;un jeu de tests.&#xA;Dans ce document, nous allons découvrir une nouvelle façon de tester ses fonctions.&#xA;Le mot clé assert Le mot clé assert est utilisé afin de s&amp;rsquo;assurer de la robustesse d&amp;rsquo;une fonction. Il ne doit jamais être utilisé au sein d&amp;rsquo;un programme pour lever une exception ; il ne faut donc pas le confondre avec le mot clé raise.</description>
    </item>
    <item>
      <title>Contrôle du flot d&#39;exécution d&#39;un programme : structures iteratives</title>
      <link>https://dlatreyte.github.io/premieres-nsi/chap-04/2-structures-iteratives/</link>
      <pubDate>Sun, 29 Aug 2021 00:17:52 +0400</pubDate><author>david.latreyte@louismassignon.com (David Latreyte)</author>
      <guid>https://dlatreyte.github.io/premieres-nsi/chap-04/2-structures-iteratives/</guid>
      <description>Ce chapitre reprend l&amp;rsquo;étude de structures de contrôles, c&amp;rsquo;est à dire d&amp;rsquo;instructions qui permettent de modifier le « flot d&amp;rsquo;exécution implicite » d&amp;rsquo;un programme.&#xA;Après les structures conditionnelles (ou alternatives), les structures itératives (ou boucles) sont introduites.&#xA;Introduction Les boucles sont des instructions répétitives. Comme les tests conditionnels, elles nécessitent la définition de blocs d’instructions. Les instructions de ces blocs sont répétées tant qu&amp;rsquo;une condition d’arrêt n&amp;rsquo;est pas vérifiée. Chaque passage dans la boucle s&amp;rsquo;appelle une itération.</description>
    </item>
    <item>
      <title>Contrôle du flot d&#39;exécution d&#39;un programme : l&#39;alternative</title>
      <link>https://dlatreyte.github.io/premieres-nsi/chap-04/1-alternative/</link>
      <pubDate>Fri, 27 Aug 2021 16:34:09 +0400</pubDate><author>david.latreyte@louismassignon.com (David Latreyte)</author>
      <guid>https://dlatreyte.github.io/premieres-nsi/chap-04/1-alternative/</guid>
      <description>Booléens et expressions booléennes Une grandeur booléenne est une grandeur qui ne peut prendre que deux valeurs : Vrai ou Faux, ou 0 ou 1, ou …). Dans le langage Python, les valeurs booléennes s&amp;rsquo;écrivent True et False. La fonction bool transforme n&amp;rsquo;importe quel argument en valeur booléenne — tout argument à valeur nulle (entier 0, flottant 0.0, chaîne de caractères &amp;quot;&amp;quot;, liste vide list(), etc.) est converti en valeur False, toute autre valeur pour l&amp;rsquo;argument devient la valeur True.</description>
    </item>
    <item>
      <title>Recherche d&#39;un réactif limitant à l&#39;aide d&#39;un programme écrit en Python</title>
      <link>https://dlatreyte.github.io/premieres-pc/chap-7/4-reactif-limitant-simulation/</link>
      <pubDate>Sat, 09 Jan 2021 21:54:37 +0400</pubDate><author>david.latreyte@louismassignon.com (David Latreyte)</author>
      <guid>https://dlatreyte.github.io/premieres-pc/chap-7/4-reactif-limitant-simulation/</guid>
      <description>On réalise l&amp;rsquo;oxydation des ions fer II $\ce{Fe^{2+} (aq)}$ par des ions permanganate $\ce{MnO4^- (aq)}$ en milieu acide.&#xA;Les couples oxydant/réducteur mis en jeu sont : $\ce{Fe^{3+}/Fe^{2+}}$ et $\ce{MnO4^-/Mn^{2+}}$.&#xA;Montrer que l&amp;rsquo;équation de la réaction s&amp;rsquo;écrit : $$ \ce{5 Fe^{2+} (aq) + MnO4^- (aq) + 8 H^+ &amp;ndash;&amp;gt; 5 Fe^{3+} (aq) + Mn^{2+} (aq) + 4 H2O } $$ On met en présence $\pu{10 mL}$ d&amp;rsquo;une solution de permanganate de potassium à la concentration $\pu{0,03 mol.</description>
    </item>
    <item>
      <title>Problème du sac à dos</title>
      <link>https://dlatreyte.github.io/premieres-nsi/chap-23/chap-23-02/</link>
      <pubDate>Sun, 23 Aug 2020 23:27:12 +0400</pubDate><author>david.latreyte@louismassignon.com (David Latreyte)</author>
      <guid>https://dlatreyte.github.io/premieres-nsi/chap-23/chap-23-02/</guid>
      <description>Au programme Algorithmique Contenus Capacités attendues Commentaires Algorithmes gloutons Résoudre un problème grâce à un algorithme glouton. Exemples : problèmes du sac à dos ou du rendu de monnaie. Les algorithmes gloutons constituent une méthode algorithmique parmi d’autres qui seront vues en terminale. </description>
    </item>
    <item>
      <title>Algorithmes gloutons, problème du rendu de monnaie</title>
      <link>https://dlatreyte.github.io/premieres-nsi/chap-23/chap-23-01/</link>
      <pubDate>Sun, 23 Aug 2020 23:00:09 +0400</pubDate><author>david.latreyte@louismassignon.com (David Latreyte)</author>
      <guid>https://dlatreyte.github.io/premieres-nsi/chap-23/chap-23-01/</guid>
      <description>Au programme Algorithmique Contenus Capacités attendues Commentaires Algorithmes gloutons Résoudre un problème grâce à un algorithme glouton. Exemples : problèmes du sac à dos ou du rendu de monnaie. Les algorithmes gloutons constituent une méthode algorithmique parmi d’autres qui seront vues en terminale. Introduction Les algorithmes gloutons forment une catégorie d&amp;rsquo;algorithmes permettant de parvenir à une solution pour un problème d&amp;rsquo;optimisation qui vise à maximiser/minimiser une quantité (plus court chemin (GPS), plus petite durée d&amp;rsquo;exécution, meilleure organisation d&amp;rsquo;un emploi du temps, etc.</description>
    </item>
    <item>
      <title>Langages et programmation</title>
      <link>https://dlatreyte.github.io/premieres-nsi/chap-02/chap-02/</link>
      <pubDate>Sat, 14 Sep 2019 21:37:45 +0400</pubDate><author>david.latreyte@louismassignon.com (David Latreyte)</author>
      <guid>https://dlatreyte.github.io/premieres-nsi/chap-02/chap-02/</guid>
      <description>À quoi a-t-on accès lorsqu&amp;rsquo;on utilise un langage de programmation ? Un langage de programmation doit :&#xA;fournir des objets (ou types) primitifs ; posséder une bibliothèque de fonctions prédéfinies ; permettre la manipulation des objets primitifs et des fonctions prédéfinies ; établir des règles qui permettent de construire de nouveaux objets (ou types) ou de nouvelles fonctions par combinaison des types primitifs et des fonctions prédéfinies. Nous allons aborder chacun de ces points.</description>
    </item>
  </channel>
</rss>
