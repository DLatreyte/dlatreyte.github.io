<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Arbres on Accueil</title>
    <link>https://dlatreyte.github.io/tags/arbres/</link>
    <description>Recent content in Arbres on Accueil</description>
    <generator>Hugo -- gohugo.io</generator>
    <managingEditor>david.latreyte@louismassignon.com (David Latreyte)</managingEditor>
    <webMaster>david.latreyte@louismassignon.com (David Latreyte)</webMaster>
    <lastBuildDate>Thu, 21 Jan 2021 06:41:30 +0400</lastBuildDate><atom:link href="https://dlatreyte.github.io/tags/arbres/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Problème du sac à dos</title>
      <link>https://dlatreyte.github.io/terminales-nsi/chap-9/5-sac-a-dos/</link>
      <pubDate>Thu, 21 Jan 2021 06:41:30 +0400</pubDate>
      <author>david.latreyte@louismassignon.com (David Latreyte)</author>
      <guid>https://dlatreyte.github.io/terminales-nsi/chap-9/5-sac-a-dos/</guid>
      <description>À lire absolument pour en découvrir plus !  Introduction Dans ce document, on s&amp;rsquo;intéresse à une classe de problèmes d&amp;rsquo;optimisation connus sous le nom général de « problème du sac à dos ». On peut définir ce problème de la manière suivante : « durant un cambriolage un voleur possède un sac dont la capacité (en poids par exemple) est limitée. Il se trouve face à un ensemble d&amp;rsquo;objets qu&amp;rsquo;il veut dérober.</description>
    </item>
    
    <item>
      <title>Arbres Binaires Recherche</title>
      <link>https://dlatreyte.github.io/terminales-nsi/chap-9/3-arbres-binaires-recherche/</link>
      <pubDate>Tue, 10 Nov 2020 05:04:12 +0400</pubDate>
      <author>david.latreyte@louismassignon.com (David Latreyte)</author>
      <guid>https://dlatreyte.github.io/terminales-nsi/chap-9/3-arbres-binaires-recherche/</guid>
      <description>Introduction Une utilisation particulière des arbres binaires est la notion d’arbre binaire de recherche. On suppose que les valeurs des nœuds sont des objets comparables entre eux : pour fixer les idées, on considère n’avoir que des entiers.
Un arbre binaire de recherche, ou ABR, est un arbre binaire avec la propriété suivante : pour tout nœud $x$, tous les nœuds situés dans le sous-arbre gauche de $x$ ont une valeur $\leqslant val(x)$, et tous ceux situés dans son sous-arbre droit ont une valeur $\geqslant val(x)$.</description>
    </item>
    
    <item>
      <title>Les arbres binaires</title>
      <link>https://dlatreyte.github.io/terminales-nsi/chap-9/2-arbres-binaires/</link>
      <pubDate>Thu, 05 Nov 2020 03:38:41 +0400</pubDate>
      <author>david.latreyte@louismassignon.com (David Latreyte)</author>
      <guid>https://dlatreyte.github.io/terminales-nsi/chap-9/2-arbres-binaires/</guid>
      <description>Le corrigé de l&amp;rsquo;activité se trouve ici  Arbres binaires Définition   Un arbre binaire est un arbre de degré 2 (dont les nœuds sont au plus de degré 2).
  Les enfants d’un nœud sont lus de gauche à droite et sont appelés : fils gauche et fils droit.
   Pour simplifier la présentation, on va considérer que chaque nœud possède exactement deux fils mais que ceux-ci peuvent être vides (None par exemple).</description>
    </item>
    
    <item>
      <title>Structures de données abstraites arborescentes : les arbres</title>
      <link>https://dlatreyte.github.io/terminales-nsi/chap-9/1-introduction-arbres/</link>
      <pubDate>Thu, 05 Nov 2020 03:37:56 +0400</pubDate>
      <author>david.latreyte@louismassignon.com (David Latreyte)</author>
      <guid>https://dlatreyte.github.io/terminales-nsi/chap-9/1-introduction-arbres/</guid>
      <description>La notion de listes chaînées est parfaite pour structurer un ensemble d&amp;rsquo;élements destinés à être énumérés séquentiellement. Elle permet aussi d&amp;rsquo;implémenter les structures de piles et de files. Elle n&amp;rsquo;est cependant pas adaptée aux accès spécifiques à des positions données dans la séquence, puisqu&amp;rsquo;il faut alors parcourir toutes les cellules depuis le début de la liste jusqu&amp;rsquo;à la position souhaitée (complexité en $O(N)$).
 Document de référence pour ce cours Structures arborescentes Lorsqu&amp;rsquo;on manipule une information présentant une certaine hiérarchie, il est commun de la représenter graphiquement :</description>
    </item>
    
  </channel>
</rss>
