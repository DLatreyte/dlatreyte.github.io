<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Programmations on Accueil</title>
    <link>https://dlatreyte.github.io/programmation/</link>
    <description>Recent content in Programmations on Accueil</description>
    <generator>Hugo -- gohugo.io</generator>
    <managingEditor>david.latreyte@louismassignon.com (David Latreyte)</managingEditor>
    <webMaster>david.latreyte@louismassignon.com (David Latreyte)</webMaster>
    <lastBuildDate>Tue, 25 Aug 2020 17:37:31 +0400</lastBuildDate>
    
	<atom:link href="https://dlatreyte.github.io/programmation/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Illustration des différents schemas pour la dérivation numérique</title>
      <link>https://dlatreyte.github.io/programmation/schemas_derivation/</link>
      <pubDate>Tue, 25 Aug 2020 17:37:31 +0400</pubDate>
      <author>david.latreyte@louismassignon.com (David Latreyte)</author>
      <guid>https://dlatreyte.github.io/programmation/schemas_derivation/</guid>
      <description>Code le plus simple possible et donc pas modulable du tout &amp;#34;&amp;#34;&amp;#34; Différences finies centrées, ordre 02 en h. Mise en évidence des erreurs de troncature et d&amp;#39;arrondis. &amp;#34;&amp;#34;&amp;#34; from math import sin, cos def df(x): return cos(x) def err_centree(x, f, df, h): return abs(df(x) - (f(x + h / 2) - f(x - h / 2)) / h) def err_progressive(x, f, df, h): return abs(df(x) - (f(x + h) - f(x)) / h) def err_retrograde(x, f, df, h): return abs(df(x) - (f(x) - f(x - h)) / h) def main(): f = lambda x: sin(x) # Fonction étudiée df = lambda x: cos(x) # Fonction dérivée de la fonction étudiée x0 = 1 # Point où le nombre dérivé est calculé hs = [1 / (10**i) for i in range(1, 15)] # Liste des pas h print( &amp;#34;h \t\tDiff.</description>
    </item>
    
  </channel>
</rss>