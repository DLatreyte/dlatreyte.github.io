<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>NSI on Accueil</title>
    <link>https://dlatreyte.github.io/categories/nsi/</link>
    <description>Recent content in NSI on Accueil</description>
    <generator>Hugo -- gohugo.io</generator>
    <managingEditor>david.latreyte@louismassignon.com (David Latreyte)</managingEditor>
    <webMaster>david.latreyte@louismassignon.com (David Latreyte)</webMaster>
    <lastBuildDate>Sat, 28 Sep 2019 11:28:37 +0400</lastBuildDate><atom:link href="https://dlatreyte.github.io/categories/nsi/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Variables, affectations</title>
      <link>https://dlatreyte.github.io/premieres-nsi/chap-03/chap-03/</link>
      <pubDate>Sat, 28 Sep 2019 11:28:37 +0400</pubDate>
      <author>david.latreyte@louismassignon.com (David Latreyte)</author>
      <guid>https://dlatreyte.github.io/premieres-nsi/chap-03/chap-03/</guid>
      <description>Variables Une variable est une zone de la mémoire repérée par un identificateur. Cet identificateur permet de modifier ou de faire appel au contenu de cette zone de la mémoire lors du déroulement du programme.  La définition d&amp;rsquo;une variable donnée ci-dessus est générale. Dans le langage Python, il est plus correct d&amp;rsquo;envisager une variable comme une étiquette (ou un alias) permettant d&amp;rsquo;accéder à un objet (nombre entier, nombre décimal, chaîne de caractères, &amp;hellip;).</description>
    </item>
    
    <item>
      <title>Langages et programmation</title>
      <link>https://dlatreyte.github.io/premieres-nsi/chap-02/chap-02/</link>
      <pubDate>Sat, 14 Sep 2019 21:37:45 +0400</pubDate>
      <author>david.latreyte@louismassignon.com (David Latreyte)</author>
      <guid>https://dlatreyte.github.io/premieres-nsi/chap-02/chap-02/</guid>
      <description>À quoi a-t-on accès lorsqu&amp;rsquo;on utilise un langage de programmation ? Un langage de programmation doit :
 fournir des objets (ou types) primitifs ; posséder une bibliothèque de fonctions prédéfinies ; permettre la manipulation des objets primitifs et des fonctions prédéfinies ; établir des règles qui permettent de construire de nouveaux objets (ou types) ou de nouvelles fonctions par combinaison des types primitifs et des fonctions prédéfinies.   Nous allons aborder chacun de ces points.</description>
    </item>
    
  </channel>
</rss>
