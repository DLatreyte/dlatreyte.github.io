<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>1ère NSI on Accueil</title>
    <link>https://dlatreyte.github.io/categories/1%C3%A8re-nsi/</link>
    <description>Recent content in 1ère NSI on Accueil</description>
    <generator>Hugo -- gohugo.io</generator>
    <managingEditor>david.latreyte@louismassignon.com (David Latreyte)</managingEditor>
    <webMaster>david.latreyte@louismassignon.com (David Latreyte)</webMaster>
    <lastBuildDate>Sat, 28 Sep 2019 17:40:56 +0400</lastBuildDate>
    
	<atom:link href="https://dlatreyte.github.io/categories/1%C3%A8re-nsi/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Tester automatiquement ses fonctions avec doctest</title>
      <link>https://dlatreyte.github.io/premieres-nsi/chap-05/chap-05/</link>
      <pubDate>Sat, 28 Sep 2019 17:40:56 +0400</pubDate>
      <author>david.latreyte@louismassignon.com (David Latreyte)</author>
      <guid>https://dlatreyte.github.io/premieres-nsi/chap-05/chap-05/</guid>
      <description>Au programme    Contenus Capacités attendues Commentaires     Constructions élémentaires Mettre en évidence un corpus de constructions élémentaires. Séquences, affectation, conditionnelles, boucles bornées, boucles non bornées, appels de fonction.   Spécification Prototyper une fonction. Décrire les préconditions sur les arguments. Décrire des postconditions sur les résultats. Des assertions peuvent être utilisées pour garantir des préconditions ou des postconditions.   Mise au point de programmes Utiliser des jeux de tests.</description>
    </item>
    
    <item>
      <title>Premiers pas en programmation... et en Python</title>
      <link>https://dlatreyte.github.io/premieres-nsi/chap-02/chap-02/</link>
      <pubDate>Sat, 14 Sep 2019 21:37:45 +0400</pubDate>
      <author>david.latreyte@louismassignon.com (David Latreyte)</author>
      <guid>https://dlatreyte.github.io/premieres-nsi/chap-02/chap-02/</guid>
      <description>On appelle informatique le traitement automatisé des informations par un ordinateur. Cette discipline s&amp;rsquo;appuie sur la programmation, activité qui consiste à apprendre à un ordinateur à effectuer des tâches qu&amp;rsquo;il n&amp;rsquo;est pas capable d&amp;rsquo;exécuter à sa conception. L&amp;rsquo;écriture d&amp;rsquo;un programme nécessite l&amp;rsquo;utilisation d&amp;rsquo;un langage de programmation. Dans ce cours nous utiliserons Python.
Au programme Langages et programmation    Contenus Capacités attendues Commentaires     Constructions élémentaires Mettre en évidence un corpus de constructions élémentaires.</description>
    </item>
    
    <item>
      <title>Éléments d&#39;histoire et d&#39;architecture des ordinateurs</title>
      <link>https://dlatreyte.github.io/premieres-nsi/chap-01/chap-01/</link>
      <pubDate>Tue, 10 Sep 2019 23:50:18 +0400</pubDate>
      <author>david.latreyte@louismassignon.com (David Latreyte)</author>
      <guid>https://dlatreyte.github.io/premieres-nsi/chap-01/chap-01/</guid>
      <description>Au programme Histoire de l’informatique    Contenus Capacités attendues Commentaires     Événements clés de l’histoire de l’informatique Situer dans le temps les principaux événements de l’histoire de l’informatique et leurs protagonistes. Ces repères historiques seront construits au fur et à mesure de la présentation des concepts et techniques.    Langages et programmation    Contenus Capacités attendues Commentaires     Diversité et unité des langages de programmation Repérer, dans un nouveau langage de programmation, les traits communs et les traits particuliers à ce langage.</description>
    </item>
    
  </channel>
</rss>